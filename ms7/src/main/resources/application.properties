server.port=8070

spring.application.name=ms7
spring.cloud.stream.function.definition=usersToKTable;postsToKTable;commentsToKTable;materializedUsersAndPosts;materializedPostsAndComments

# KAFKA
spring.cloud.stream.function.bindings.users-out-0=uout0
spring.cloud.stream.function.bindings.posts-out-0=pout0
spring.cloud.stream.function.bindings.comments-out-0=cout0

# users
spring.cloud.stream.bindings.uout0.destination=users
spring.cloud.stream.bindings.uout0.producer.use-native-encoding=true
spring.cloud.stream.bindings.uout0.producer.header-mode=headers

# posts
spring.cloud.stream.bindings.pout0.destination=posts
spring.cloud.stream.bindings.pout0.producer.use-native-encoding=true
spring.cloud.stream.bindings.pout0.producer.header-mode=headers

# comments
spring.cloud.stream.bindings.cout0.destination=comments
spring.cloud.stream.bindings.cout0.producer.use-native-encoding=true
spring.cloud.stream.bindings.cout0.producer.header-mode=headers

# CONFIG
spring.cloud.stream.kafka.binder.brokers=:49153
spring.cloud.stream.kafka.binder.auto-add-partitions=true
spring.cloud.stream.kafka.binder.auto-alter-topics=true
spring.cloud.stream.kafka.binder.min-partition-count=3
spring.cloud.stream.kafka.binder.replication-factor=2
spring.cloud.stream.kafka.binder.producer-properties.topic.replication-factor=2
spring.cloud.stream.kafka.binder.producer-properties.key.serializer=org.apache.kafka.common.serialization.LongSerializer
spring.cloud.stream.kafka.binder.producer-properties.value.serializer=org.springframework.kafka.support.serializer.JsonSerializer

# KAFKA STREAMS
spring.cloud.stream.function.bindings.usersToKTable-in-0=utktin0
spring.cloud.stream.function.bindings.usersToKTable-out-0=utktout0
spring.cloud.stream.function.bindings.postsToKTable-in-0=ptktin0
spring.cloud.stream.function.bindings.postsToKTable-out-0=ptktout0
spring.cloud.stream.function.bindings.commentsToKTable-in-0=ctktin0
spring.cloud.stream.function.bindings.commentsToKTable-out-0=ctktout0
spring.cloud.stream.function.bindings.materializedUsersAndPosts-in-0=muapin0
spring.cloud.stream.function.bindings.materializedUsersAndPosts-in-1=muapin1
spring.cloud.stream.function.bindings.materializedPostsAndComments-in-0=mpacin0
spring.cloud.stream.function.bindings.materializedPostsAndComments-in-1=mpacin1

# usersToKTable
spring.cloud.stream.bindings.utktin0.destination=users
spring.cloud.stream.bindings.utktin0.group=utkt
spring.cloud.stream.bindings.utktin0.consumer.use-native-decoding=true
spring.cloud.stream.bindings.utktout0.destination=utkt
spring.cloud.stream.bindings.utktout0.producer.use-native-encoding=true
spring.cloud.stream.bindings.utktout0.producer.header-mode=headers

# postsToKTable
spring.cloud.stream.bindings.ptktin0.destination=posts
spring.cloud.stream.bindings.ptktin0.group=ptkt
spring.cloud.stream.bindings.ptktin0.consumer.use-native-decoding=true
spring.cloud.stream.bindings.ptktout0.destination=ptkt
spring.cloud.stream.bindings.ptktout0.producer.use-native-encoding=true
spring.cloud.stream.bindings.ptktout0.producer.header-mode=headers

# commentsToKTable
spring.cloud.stream.bindings.ctktin0.destination=comments
spring.cloud.stream.bindings.ctktin0.group=ctkt
spring.cloud.stream.bindings.ctktin0.consumer.use-native-decoding=true
spring.cloud.stream.bindings.ctktout0.destination=ctkt
spring.cloud.stream.bindings.ctktout0.producer.use-native-encoding=true
spring.cloud.stream.bindings.ctktout0.producer.header-mode=headers

# materializedUsersAndPosts
spring.cloud.stream.bindings.muapin0.destination=users
spring.cloud.stream.bindings.muapin0.group=muapu
spring.cloud.stream.bindings.muapin0.consumer.use-native-decoding=true
spring.cloud.stream.bindings.muapin1.destination=posts
spring.cloud.stream.bindings.muapin1.group=muapp
spring.cloud.stream.bindings.muapin1.consumer.use-native-decoding=true

# materializedPostsAndComments
spring.cloud.stream.bindings.mpacin0.destination=posts
spring.cloud.stream.bindings.mpacin0.group=mpaccp
spring.cloud.stream.bindings.mpacin0.consumer.use-native-decoding=true
spring.cloud.stream.bindings.mpacin1.destination=comments
spring.cloud.stream.bindings.mpacin1.group=mpaccc
spring.cloud.stream.bindings.mpacin1.consumer.use-native-decoding=true

# STREAMS APPLICATIONS
spring.cloud.stream.kafka.streams.binder.functions.usersToKTable.application-id=utktApp
spring.cloud.stream.kafka.streams.binder.functions.postsToKTable.application-id=ptktApp
spring.cloud.stream.kafka.streams.binder.functions.commentsToKTable.application-id=ctktApp
spring.cloud.stream.kafka.streams.binder.functions.materializedUsersAndPosts.application-id=muapApp
spring.cloud.stream.kafka.streams.binder.functions.materializedPostsAndComments.application-id=mpacApp

# CONFIG
spring.cloud.stream.kafka.streams.binder.brokers=:49153
spring.cloud.stream.kafka.streams.binder.auto-add-partitions=true
spring.cloud.stream.kafka.streams.binder.auto-alter-topics=true
spring.cloud.stream.kafka.streams.binder.min-partition-count=3
spring.cloud.stream.kafka.streams.binder.replication-factor=2
spring.cloud.stream.kafka.streams.binder.deserialization-exception-handler=logandcontinue
spring.cloud.stream.kafka.streams.binder.consumer-properties.spring.json.trusted.packages=pe.com.dev4java11.jsonplaceholder
spring.cloud.stream.kafka.streams.binder.consumer-properties.key.serde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.binder.consumer-properties.value.serde=org.springframework.kafka.support.serializer.JsonSerde
spring.cloud.stream.kafka.streams.binder.producer-properties.replication-factor=2
spring.cloud.stream.kafka.streams.binder.producer-properties.key.serde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.binder.producer-properties.value.serde=org.springframework.kafka.support.serializer.JsonSerde

# EXTERNAL API
jsonplaceholder.api.users=https://jsonplaceholder.typicode.com/users
jsonplaceholder.api.posts=https://jsonplaceholder.typicode.com/posts
jsonplaceholder.api.comments=https://jsonplaceholder.typicode.com/comments