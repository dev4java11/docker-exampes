server:
  port: 8060
  
logging:
  level:
    '[pe.com.dev4java11]': info

spring:
  application:
    name: ms6
    
  cloud:
    stream:
      source: employee
      function:
        definition: filterGreaterEqualSalary2000;errorFilterGreaterEqualSalary2000;kStreamFilterBirthdayGreaterEqual1900;kStreamCountGenders;kStreamLogCountGenders
        bindings:
          '[employee-out-0]': empout0
          '[filterGreaterEqualSalary2000-in-0]': fges2000in0
          '[filterGreaterEqualSalary2000-out-0]': fges2000out0
          '[errorFilterGreaterEqualSalary2000-in-0]': efges2000in0
          '[kStreamFilterBirthdayGreaterEqual1900-in-0]': ksfbge1900in0
          '[kStreamFilterBirthdayGreaterEqual1900-out-0]': ksfbge1900out0
          '[kStreamCountGenders-in-0]': kscgin0
          '[kStreamCountGenders-out-0]': kscgout0
          '[kStreamLogCountGenders-in-0]': kslcgin0
      bindings:
        empout0:
          destination: employee
          producer:
            header-mode: headers
            use-native-encoding: true
        fges2000in0:
          destination: employee
          group: fges2000
          consumer:
            use-native-decoding: true
        fges2000out0:
          destination: fges2000
          producer:
            header-mode: headers
            use-native-encoding: true
        efges2000in0:
          destination: error.employee.fges2000
          group: fges2000
        ksfbge1900in0:
          destination: employee
          group: ksfbge1900
          consumer:
            use-native-decoding: true
        ksfbge1900out0:
          destination: ksfbge1900
          producer:
            header-mode: headers
            use-native-encoding: true
        kscgin0:
          destination: employee
          group: kscg
          consumer:
            use-native-decoding: true
        kscgout0:
          destination: kscg
          producer:
            use-native-encoding: true
        kslcgin0:
          destination: kscg
          group: kslcg
          consumer:
            use-native-decoding: true
      kafka:
        bindings:
          empout0:
            producer:
              configuration:
                '[topic.replication-factor]': 2
                '[key.serializer]': org.apache.kafka.common.serialization.StringSerializer
                '[value.serializer]': org.springframework.kafka.support.serializer.JsonSerializer
          fges2000in0:
            consumer:
              enable-dlq: true
              dlq-producer-properties:
                configuration:
                  '[key.serializer]': org.apache.kafka.common.serialization.StringSerializer
                  '[value.serializer]': org.springframework.kafka.support.serializer.JsonSerializer
              configuration:
                '[spring.json.trusted.packages]' : 'pe.com.dev4java11'
                '[key.deserializer]': org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
                '[value.deserializer]': org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
                '[spring.deserializer.key.delegate.class]': org.apache.kafka.common.serialization.StringDeserializer
                '[spring.deserializer.value.delegate.class]': org.springframework.kafka.support.serializer.JsonDeserializer
          fges2000out0:
            producer:
              configuration:
                '[topic.replication-factor]': 2
                '[key.serializer]': org.apache.kafka.common.serialization.StringSerializer
                '[value.serializer]': org.springframework.kafka.support.serializer.JsonSerializer
          efges2000in0:
            consumer:
              configuration:
                '[spring.json.trusted.packages]' : 'pe.com.dev4java11'
                '[key.deserializer]': org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
                '[value.deserializer]': org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
                '[spring.deserializer.key.delegate.class]': org.apache.kafka.common.serialization.StringDeserializer
                '[spring.deserializer.value.delegate.class]': org.springframework.kafka.support.serializer.JsonDeserializer
        streams:
          binder:
            functions:
              kStreamFilterBirthdayGreaterEqual1900:
                application-id: ksfbge1900
              kStreamCountGenders:
                application-id: kscg
              kStreamLogCountGenders:
                application-id: kslcg
            brokers:
              - :49153
              - :49154
              - :49155
            auto-add-partitions: true
            replication-factor: 2
            auto-alter-topics: true
            min-partition-count: 3
            deserialization-exception-handler: logandcontinue
          bindings:
            ksfbge1900in0:
              consumer:
                key-serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value-serde: org.springframework.kafka.support.serializer.JsonSerde
                configuration:
                  '[spring.json.trusted.packages]' : 'pe.com.dev4java11'
            ksfbge1900out0:
              producer:
                key-serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value-serde: org.springframework.kafka.support.serializer.JsonSerde
                configuration:
                  '[topic.replication-factor]': 2
            kscgin0:
              consumer:
                key-serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value-serde: org.springframework.kafka.support.serializer.JsonSerde
                configuration:
                  '[spring.json.trusted.packages]' : 'pe.com.dev4java11'
            kscgout0:
              producer:
                key-serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value-serde: org.apache.kafka.common.serialization.Serdes$LongSerde
                configuration:
                  '[topic.replication-factor]': 2
            kslcgin0:
              consumer:
                key-serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value-serde: org.apache.kafka.common.serialization.Serdes$LongSerde
        binder:
          brokers:
          - :49153
          - :49154
          - :49155
          auto-add-partitions: true
          replication-factor: 2
          auto-alter-topics: true
          min-partition-count: 3
          configuration:
            '[spring.json.trusted.packages]': '*'
            